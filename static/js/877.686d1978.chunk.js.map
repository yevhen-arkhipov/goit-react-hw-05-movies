{"version":3,"file":"static/js/877.686d1978.chunk.js","mappings":"+PA6CA,EAxCa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDC,EAAAA,EAAAA,IAAQJ,GAFP,OAEdK,EAFc,OAGpBN,EAASM,GAHW,gDAKpBC,QAAQC,MAAR,MALoB,yDAAH,qDAQrBJ,GACD,GAAE,CAACH,IAEJ,IAGMQ,EAAWV,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACzB,2BACE,gBACEC,IAAKD,EAAY,UANJ,mCAMI,OAAmBA,GAJxC,+EAKIE,IAAKH,EACLI,OAAO,QACPC,MAAM,WAER,uBAAIL,KACJ,uCAAeD,OARRD,EADgB,IAa3B,OAAOZ,EAAMoB,OAAS,GACpB,8BAAMV,EAAN,QAEA,kEAEH,C,8LCzCDW,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EAAU,UAKHC,EAAa,mCAAG,+GAEFH,EAAAA,GAAAA,IAAA,UANR,sBAMQ,oBAAsCC,IAFpC,uBAEjBf,EAFiB,EAEjBA,KAFiB,kBAGlBA,EAAKkB,SAHa,gCAKzBjB,QAAQC,MAAR,MALyB,yDAAH,qDAkBbiB,EAAY,mCAAG,WAAMd,GAAN,kGAEDS,EAAAA,GAAAA,IAAA,UAClBE,GADkB,OACLX,EADK,oBACSU,EADT,oBAFC,uBAEhBf,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBC,QAAQC,MAAR,MAPwB,yDAAH,sDAWZkB,EAAgB,mCAAG,WAAMC,GAAN,kGAELP,EAAAA,GAAAA,IAAA,UAjCV,gBAiCU,oBACKC,EADL,kBACsBM,EADtB,yBAFK,uBAEpBrB,EAFoB,EAEpBA,KAFoB,kBAKrBA,EAAKkB,SALgB,gCAO5BjB,QAAQC,MAAR,MAP4B,yDAAH,sDAWhBH,EAAO,mCAAG,WAAMM,GAAN,kGAEIS,EAAAA,GAAAA,IAAA,UAClBE,GADkB,OACLX,EADK,4BACiBU,EADjB,oBAFJ,uBAEXf,EAFW,EAEXA,KAFW,kBAKZA,EAAKsB,MALO,gCAOnBrB,QAAQC,MAAR,MAPmB,yDAAH,sDAWPqB,EAAU,mCAAG,WAAMlB,GAAN,kGAECS,EAAAA,GAAAA,IAAA,UAClBE,GADkB,OACLX,EADK,4BACiBU,EADjB,oBAFD,uBAEdf,EAFc,EAEdA,KAFc,kBAKfA,EAAKkB,SALU,gCAOtBjB,QAAQC,MAAR,MAPsB,yDAAH,qD","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { GetCast } from 'services/api';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCastMovies = async () => {\n      try {\n        const data = await GetCast(movieId);\n        setCasts(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCastMovies();\n  }, [movieId]);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w185';\n  const defaultImg =\n    'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';\n  const elements = casts.map(({ id, character, name, profile_path }) => (\n    <li key={id}>\n      <img\n        src={profile_path ? `${baseImgUrl}${profile_path}` : defaultImg}\n        alt={name}\n        height=\"277px\"\n        width=\"185px\"\n      />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ));\n\n  return casts.length > 0 ? (\n    <ul> {elements} </ul>\n  ) : (\n    <p>We don't have any actors for this movie</p>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f770e26d26a9f8dc8d3f9af112edaff0';\n\nconst queryMovie = `/movie/`;\nconst queryTrending = `/trending/movie/day`;\nconst queryGenres = `/genre/movie/list`;\nconst querySearch = `/search/movie`;\n\nexport const TrendingMovie = async () => {\n  try {\n    const { data } = await axios.get(`${queryTrending}?api_key=${API_KEY}`);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetGenre = async () => {\n  try {\n    const { genres } = await axios.get(`${queryGenres}?api_key=${API_KEY}`);\n    return genres;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `${queryMovie}${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetMovieBySearch = async q => {\n  try {\n    const { data } = await axios.get(\n      `${querySearch}?api_key=${API_KEY}&query=${q}&include_adult=false`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${queryMovie}${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${queryMovie}${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["useState","casts","setCasts","movieId","useParams","useEffect","fetchCastMovies","GetCast","data","console","error","elements","map","id","character","name","profile_path","src","alt","height","width","length","axios","API_KEY","queryMovie","TrendingMovie","results","GetMovieById","GetMovieBySearch","q","cast","GetReviews"],"sourceRoot":""}