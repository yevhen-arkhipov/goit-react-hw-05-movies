{"version":3,"file":"static/js/859.5bace02a.chunk.js","mappings":"qMA+BA,EA5BkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,OAA2B,IAAnBC,MAAAA,OAAmB,MAAX,KAAW,EACxCC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,gCACGF,IAAS,wBAAKA,KACf,wBACGD,EAAOI,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YACjC,OACE,yBACE,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaL,GAAhD,WACE,gBACEM,IAAKJ,EAAW,UAbb,oCAaa,OAAmBA,GAXjD,6EAYcK,IAAKN,KAEP,uBAAIA,QANCD,EAUZ,QAIR,C,+ICFD,EAtBa,WACX,OAAoCQ,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAECC,EAAAA,EAAAA,MAFD,OAEdC,EAFc,OAGpBJ,EAAcI,GAHM,gDAKpBC,QAAQC,MAAR,MALoB,yDAAH,qDAQrBJ,GACD,GAAE,KAGD,0BACE,SAACK,EAAA,EAAD,CAAWtB,OAAQc,EAAYb,MAAM,sBAG1C,C,8LCvBDsB,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EAAU,UAKHP,EAAa,mCAAG,+GAEFK,EAAAA,GAAAA,IAAA,UANR,sBAMQ,oBAAsCC,IAFpC,uBAEjBE,EAFiB,EAEjBA,KAFiB,kBAGlBA,EAAKC,SAHa,gCAKzBP,QAAQC,MAAR,MALyB,yDAAH,qDAkBbO,EAAY,mCAAG,WAAMvB,GAAN,kGAEDkB,EAAAA,GAAAA,IAAA,UAClBE,GADkB,OACLpB,EADK,oBACSmB,EADT,oBAFC,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAKjBA,GALiB,gCAOxBN,QAAQC,MAAR,MAPwB,yDAAH,sDAWZQ,EAAgB,mCAAG,WAAMC,GAAN,kGAELP,EAAAA,GAAAA,IAAA,UAjCV,gBAiCU,oBACKC,EADL,kBACsBM,EADtB,yBAFK,uBAEpBJ,EAFoB,EAEpBA,KAFoB,kBAKrBA,EAAKC,SALgB,gCAO5BP,QAAQC,MAAR,MAP4B,yDAAH,sDAWhBU,EAAO,mCAAG,WAAM1B,GAAN,kGAEIkB,EAAAA,GAAAA,IAAA,UAClBE,GADkB,OACLpB,EADK,4BACiBmB,EADjB,oBAFJ,uBAEXE,EAFW,EAEXA,KAFW,kBAKZA,EAAKM,MALO,gCAOnBZ,QAAQC,MAAR,MAPmB,yDAAH,sDAWPY,EAAU,mCAAG,WAAM5B,GAAN,kGAECkB,EAAAA,GAAAA,IAAA,UAClBE,GADkB,OACLpB,EADK,4BACiBmB,EADjB,oBAFD,uBAEdE,EAFc,EAEdA,KAFc,kBAKfA,EAAKC,SALU,gCAOtBP,QAAQC,MAAR,MAPsB,yDAAH,qD","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nconst MovieList = ({ movies, title = null }) => {\n  const location = useLocation();\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w342/';\n  const defaultImg =\n    'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';\n\n  return (\n    <>\n      {title && <h3>{title}</h3>}\n      <ul>\n        {movies.map(({ id, original_title, poster_path }) => {\n          return (\n            <li key={id}>\n              <Link state={{ from: location }} to={`/movies/${id}`}>\n                <img\n                  src={poster_path ? `${baseImgUrl}${poster_path}` : defaultImg}\n                  alt={original_title}\n                />\n                <p>{original_title}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\n\nimport { TrendingMovie } from 'services/api';\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [trendMovie, setTrendMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendMovie = async () => {\n      try {\n        const result = await TrendingMovie();\n        setTrendMovie(result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTrendMovie();\n  }, []);\n\n  return (\n    <div>\n      <MovieList movies={trendMovie} title=\"Trending movies:\" />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f770e26d26a9f8dc8d3f9af112edaff0';\n\nconst queryMovie = `/movie/`;\nconst queryTrending = `/trending/movie/day`;\nconst queryGenres = `/genre/movie/list`;\nconst querySearch = `/search/movie`;\n\nexport const TrendingMovie = async () => {\n  try {\n    const { data } = await axios.get(`${queryTrending}?api_key=${API_KEY}`);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetGenre = async () => {\n  try {\n    const { genres } = await axios.get(`${queryGenres}?api_key=${API_KEY}`);\n    return genres;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `${queryMovie}${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetMovieBySearch = async q => {\n  try {\n    const { data } = await axios.get(\n      `${querySearch}?api_key=${API_KEY}&query=${q}&include_adult=false`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${queryMovie}${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${queryMovie}${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["movies","title","location","useLocation","map","id","original_title","poster_path","state","from","to","src","alt","useState","trendMovie","setTrendMovie","useEffect","fetchTrendMovie","TrendingMovie","result","console","error","MovieList","axios","API_KEY","queryMovie","data","results","GetMovieById","GetMovieBySearch","q","GetCast","cast","GetReviews"],"sourceRoot":""}